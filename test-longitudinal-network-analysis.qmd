---
title: "Test-Longitudinal Network Analysis"
author: "Nicolas Robinson-Garcia"
format: html
editor: visual
---

# Mock-up analysis

I want to analyze how the topical space of researchers changes over time. For this, I am going to conduct a longitudinal network analysis. First I will play around with made up data to learn iGraph

## Data formats and viz

Here is some mock data for an individual with three networks from three different points in time of places they've been at:

```{r}

# Load the required packages
library(igraph)
library(statnet)
library(network)
library(networkDynamic)


triangle <- network.initialize(3) # Create toy network
add.edge(triangle, 1, 2) # add an edge between vertices 1 and 2
add.edge(triangle, 2, 3) # add another edge
activate.edges(triangle, at = 1) # turn on all edges at time 1 only
activate.edges(triangle, 
  onset = 2,
  terminus = 3,
  e = get.edgeIDs(triangle, v = 1, alter = 2)
)

add.edges.active(
  triangle,
  onset = 4,
  length = 2,
  tail = 3,
  head = 1
)

} # handmade degree function
plot(triangle,main='ignoring dynamics',displaylabels=T)
plot(
  network.extract(triangle, onset = 1, terminus = 2),
  main = 'at time 1',
  displaylabels = T
)
plot(
  network.extract(triangle, onset = 2, terminus = 3),
  main = 'at time 2',
  displaylabels = T
)
plot(
  network.extract(triangle, onset = 5, terminus = 6),
  main = 'at time 5',
  displaylabels = T
)

```

To visualize them I need to use the `ggraph`. Let's see how it works.

```{r}
library(ggraph)

network_list <- network_list[-null_graph_idx]
igraph_list <- lapply(network_list, function(net) {
  # Extract the adjacency matrix from the network object
  adj_matrix <- as.matrix(net$graph)
  
  # Convert the adjacency matrix to an igraph object
  igraph_from_adjacency_matrix(adj_matrix, mode = "undirected")
})

# Create a data frame with network and time point information for each node
node_info <- data.frame(
  node = igraph::V(combined_network)$name,
  network = rep(1:length(network_list), each = length(network_list[[1]]$nodes))
)

# Plot the network at each time point separately
ggraph(combined_network, layout = "xy") +
  geom_edge_link() +
  geom_node_point(aes(x = x, y = y)) +
  facet_grid(~network) +
  scale_x_continuous(limits = c(0, 4)) +
  scale_y_continuous(limits = c(0, 4)) +
  labs(title = "Longitudinal Network Visualization")

```

# Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
